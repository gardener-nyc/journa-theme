//
// === Colors ===
//

$all-colors: (
	white : #FFFFFF,
	black : #000000,
);

//
// === Breakpoints ===
//

$breakpoints : (
	xs  : 400px,
	sm  : 600px,
	md  : 800px,
	lg  : 1000px,
	xl  : 1200px,
);

//
// === Grid ===
//

$column-size: 12;

$grid-gutter-mobile: 10px;
$grid-gutter-desktop: 20px;
$grid-gutter-extra: (
	none    : 0px,
	small   : 10px,
	default : $grid-gutter-desktop,
	double  : 40px,
);

$grid-padding-mobile: 15px;
$grid-padding-desktop: 20px;

$grid-max-width: 1920px;

//
// === Spacer ===
//

$spacer-max: 10;
$spacer-size: 10px;

//
// === Typography ===
//

$font-size-mobile: 14px;
$line-height-mobile: 20px;

$font-size-desktop: 14px;
$line-height-desktop: 20px;

$font-family-system: -apple-system, BlinkMacSystemFont, 'Helvetica Neue', Helvetica, sans-serif;

/*
// === Config Getter Functions ===
*/

@function color($color-name) {
	$color-found: map-has-key($all-colors, $color-name);
	@if ($color-found == true) {
		@return map-get($all-colors, $color-name);
	} @else {
		@warn "Color " + #{$color-name} + " doesn't exist.";
	}
}

@mixin breakpoint($size) {
	$breakpoint-found: map-has-key($breakpoints, $size);
	@if ($breakpoint-found == true) {
		$breakpoint: map-get($breakpoints, $size);
		@media (min-width: #{$breakpoint}) {
			@content;
		}
	} @else {
		@warn "Breakpoint size " + #{$size} + " doesn't exist."
	}
}

@function gutter($gutter-name) {
	$gutter-found: map-has-key($grid-gutter-extra, $gutter-name);
	@if ($gutter-found == true) {
		@return map-get($grid-gutter-extra, $gutter-name);
	} @else {
		@warn "Gutter " + #{$gutter-name} + " doesn't exist.";
	}
}